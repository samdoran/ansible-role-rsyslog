# TCP {{ rsyslog_tcp_port }} and UDP {{ rsyslog_udp_port }} for unecrypted traffic
{% if rsyslog_encrypt and rsyslog_protocol == 'tcp' %}
# Server uses TCP {{ rsyslog_tls_port }} for encrytped traffic,
$DefaultNetstreamDriverCAFile {{ rsyslog_ssl_ca_path }}/{{ rsyslog_ssl_ca_filename }}
$DefaultNetstreamDriver gtls            # use gtls netstream driver
$ActionSendStreamDriverMode 1           # require TLS for the connection
$ActionSendStreamDriverAuthMode anon    # server is NOT authenticated
{% endif %}

# An on-disk queue is created for this action. If the remote host is
# down, messages are spooled to disk and sent when it is up again.

$WorkDirectory /var/lib/rsyslog # where to place spool files
$ActionQueueFileName fwdRule1   # unique name prefix for spool files
$ActionQueueMaxDiskSpace 1g     # 1gb space limit (use as much as possible)
$ActionQueueSaveOnShutdown on   # save messages to disk on shutdown
$ActionQueueType LinkedList     # run asynchronously
$ActionResumeRetryCount -1      # infinite retries if host is down
$ActionForwardDefaultTemplate RSYSLOG_ForwardFormat  # forward messages with precise timestamp and zone information

$MaxMessageSize 32k             # Increase max message size to prevent truncating messages
$ModLoad imfile                 # Load the imfile input module

{% for item in logcheck.results %}
{% if item.stat.exists %}
# --- Capture {{ item.item.group }} logs --- #
$InputFileName {{ item.item.logpath }}
$InputFileTag {{ item.item.tag }}:
$InputFileStateFile {{ item.item.tag }}-state
$InputFileFacility {{ item.item.facility }}
$InputFileSeverity {{ item.item.severity }}
$InputRunFileMonitor

{% if rsyslog_encrypt %}
local0.* @@{{ rsyslog_collector }}:{{ rsyslog_tls_port }}       # Send everything via TCP {{ rsyslog_tls_port }}
{% elif rsyslog_protocol == 'tcp' %}
local0.* @@{{ rsyslog_collector }}:{{ rsyslog_tcp_port }}       # Send everything via TCP {{ rsyslog_tcp_port }}
{% elif rsyslog_protocol == 'udp' %}
local0.* @{{ rsyslog_collector }}:{{ rsyslog_udp_port }}       # Send everything via UDP {{ rsyslog_udp_port }}
{% endif %}
& ~

{% endif %}
{% endfor %}
# --- Ship all syslogs to {{ rsyslog_collector }} --- #
{% if rsyslog_encrypt %}
*.* @@{{ rsyslog_collector }}:{{ rsyslog_tls_port }}       # Send everything via TCP {{ rsyslog_tls_port }}
{% elif rsyslog_protocol == 'tcp' %}
*.* @@{{ rsyslog_collector }}:{{ rsyslog_tcp_port }}       # Send everything via TCP {{ rsyslog_tcp_port }}
{% elif rsyslog_protocol == 'udp' %}
*.* @{{ rsyslog_collector }}:{{ rsyslog_udp_port }}       # Send everything via UDP {{ rsyslog_udp_port }}
{% endif %}
